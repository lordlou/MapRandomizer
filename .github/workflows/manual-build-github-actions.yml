name: manual-build-github-actions
on: workflow_dispatch

jobs:
  macos:
    runs-on: macos-13
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        target: ["x86_64", "universal2"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - ${{ matrix.target }}
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m rust/maprando/Cargo.toml
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      - name: Create Release
        uses: softprops/action-gh-release@b7e450da2a4b4cb4bfbae528f788167786cfcedf
        with:
          draft: true
          prerelease: true
          name: pysmmaprando v${{ env.RELEASE_VERSION }}
          files: |
            ./dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
  #       target: [x64]
  #   steps:
  #     - uses: actions/checkout@v3
  #      with:
  #        submodules: 'true'
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python }}
  #         architecture: ${{ matrix.target }}
  #     - uses: dtolnay/rust-toolchain@stable
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist -m rust/maprando/Cargo.toml
  #     - name: Set env
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
  #     - name: Create Release
  #       uses: softprops/action-gh-release@b7e450da2a4b4cb4bfbae528f788167786cfcedf
  #       with:
  #         draft: true
  #         prerelease: true
  #         name: pysmmaprando v${{ env.RELEASE_VERSION }}
  #         files: |
  #           ./dist/*.whl
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # linux:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
  #       target: ["x86_64", "aarch64"]
  #   steps:
  #     - uses: actions/checkout@v3
  #        with:
  #          submodules: 'true'
  #     - name: Install OpenSSL
  #       run: sudo apt-get update && sudo apt-get install -y libssl-dev
  #     - name: Set OPENSSL_DIR
  #       run: echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         manylinux: auto
  #         args: --release --out dist -m rust/maprando/Cargo.toml -i python${{ matrix.python }}
  #     - name: Set env
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
  #     - name: Create Release
  #       uses: softprops/action-gh-release@b7e450da2a4b4cb4bfbae528f788167786cfcedf
  #       with:
  #         draft: true
  #         prerelease: true
  #         name: pysmmaprando v${{ env.RELEASE_VERSION }}
  #         files: |
  #           ./dist/*.whl
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}