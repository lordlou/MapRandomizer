<!DOCTYPE html>
<html lang="en-US">
<head>
<% include!("../common/header.stpl"); %>
<title><%= room_name %> - Super Metroid Map Rando</title>
</head>
<body>
<% include!("../common/navbar.stpl"); %>
<script>
document.getElementById("navigation-logic").classList.add("active");
</script>

<% include!("../common/video-modal.stpl"); %>

<div class="container col-xl-10 col-xxl-8 pt-2 pb-2">
    <div class="row mb-0 pb-0">
        <div class="col-sm-8">
            <h3 class="mb-0 pb-0"><%= room_name %></h3>
        </div>

        <div class="col-sm-4 pb-2 hstack">
            <div class="ms-auto">
                <p class="my-auto"><small>Room ID: <%= room_id %></small></p>
            </div>
            <div class="vr mx-2"></div>
            <div>
                <small><a href="https://wiki.supermetroid.run/<%= room_name_url_encoded%>">Wiki</a></small>
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-12 overflow-auto">
            <img src="/<%- room_diagram_path %>">
        </div>
    </div>

    <form id="filterForm">
    <div class="row">
        <div class="col-lg-2 my-2 d-flex align-items-center">
            Difficulty filter
        </div>
        <div class="col-lg-10 my-2 btn-group overflow-auto" role="group">
        <% for (i, difficulty) in difficulty_names.iter().enumerate() { 
            let checked = if i == difficulty_names.len() - 1 { "checked" } else { "" }; 
            %>
            <input type="radio" class="btn-check difficulty-filter" name="preset" value="<%= i %>"
                id="preset<%= i %>" autocomplete="off" onclick="presetChanged()" <%- checked %>>
            <label class="btn btn-outline-secondary p-2" for="preset<%= i %>"><%= difficulty %></label>
        <% } %>
        </div>
    </div>
    </form>
    <div class="row">
        <div class="col-lg-2 my-2 d-flex align-items-center">
            <label for="fromNode">From node</label>
        </div>
        <div class="col-sm-6 my-2">
            <select id="fromNode" name="fromNode" class="form-select" onchange="updateSelect();">
            <option value="any" selected>Any</option>
            <% for (node_id, node_name) in &nodes { %>
                <option class="from-node-option" value="<%= node_id %>"><%= node_id %>: <%= node_name %></option>
            <% } %>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-2 my-2 d-flex align-items-center">
            <label for="toNode">To node</label>
        </div>
        <div class="col-sm-6 my-2">
            <select id="toNode" name="toNode" class="form-select" onchange="updateSelect();">
            <option value="any" selected>Any</option>
            <% for (node_id, node_name) in &nodes { %>
                <option class="to-node-option" value="<%= node_id %>"><%= node_id %>: <%= node_name %></option>
            <% } %>
            </select>
        </div>
    </div>

    <div class="accordion">
        <div class="accordion-item my-3">
            <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseStrats">
                Strats (<span id="stratCount"></span>)
            </button>
            </h2>        
            <div id="collapseStrats" class="accordion-collapse collapse show">
                <style>
                html[data-bs-theme=dark] .table {
                    --bs-table-hover-bg: #2b3035;
                }
                html[data-bs-theme=light] .table {
                    --bs-table-hover-bg: #f4f5f6;
                }
                .png-tech {
                    position: absolute;
                }
                .strat-row:hover .png-tech {
                    opacity: 0;
                }
                .strat-row:not(:hover) .gif-tech {
                    opacity: 0;
                }
                </style>
                <table class="table table-hover mb-0">
                <tbody>
                <% for strat in strats { %>
                <tr class="strat-row" 
                    data-from-node="<%= strat.from_node_id %>" 
                    data-to-node="<%= strat.to_node_id %>"
                    data-difficulty="<%= strat.difficulty_idx %>">
                <td class="p-2">
                    <% include!("strat.stpl"); %>
                </td>
                </tr>
                <% } %>
                </tbody>
                </table>
            </div>
        </div>
        <div class="accordion-item my-3">
            <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRoomJSON">
                Room JSON
            </button>
            </h2>        
            <div id="collapseRoomJSON" class="accordion-collapse collapse">
                <pre class="m-2"><%= room_json %></pre>
            </div>
        </div>
    </div>
</div>
<% include!("../common/save_settings.stpl"); %>
<script>
function presetChanged() {
    updateSelect();
    saveForm(document.getElementById("filterForm"));
}
function getDifficultyFilter() {
    var elems = document.getElementsByClassName("difficulty-filter");
    for (var i = 0; i < elems.length; i++) {
        if (elems[i].checked) {
            return elems[i].value;
        }
    }
    return -1;
}
function updateSelect() {
    var rows = document.getElementsByClassName("strat-row");
    var selectedFromNode = document.getElementById("fromNode").value;
    var selectedToNode = document.getElementById("toNode").value;
    var validFromSet = new Set();
    var validToSet = new Set();
    var difficultyFilter = getDifficultyFilter();

    // Show/hide the matching set of Strats:
    var cnt = 0;
    for (var i = 0; i < rows.length; i++) {
        var row = rows.item(i);
        var validDifficulty = (row.getAttribute("data-difficulty") <= difficultyFilter);
        var rowFromNode = row.getAttribute("data-from-node");
        var rowToNode = row.getAttribute("data-to-node");
        var validFrom = (selectedFromNode == "any" || rowFromNode == selectedFromNode);
        var validTo = (selectedToNode == "any" || rowToNode == selectedToNode);
        if (validDifficulty && validFrom && validTo) {
            row.classList.remove("d-none");
            cnt += 1;
        } else {
            row.classList.add("d-none");
        }
        if (validDifficulty && validFrom) {
            validToSet.add(rowToNode);
        }
        if (validDifficulty && validTo) {
            validFromSet.add(rowFromNode);
        }
    }
    document.getElementById("stratCount").innerHTML = cnt;

    // Color the to/from node options by whether they have any matching strats:
    var fromOptions = document.getElementsByClassName("from-node-option");
    for (var i = 0; i < fromOptions.length; i++) {
        var opt = fromOptions.item(i);
        if (validFromSet.has(opt.value)) {
            opt.classList.remove("text-muted");
        } else {
            opt.classList.add("text-muted");
        }
    }

    var toOptions = document.getElementsByClassName("to-node-option");
    for (var i = 0; i < toOptions.length; i++) {
        var opt = toOptions.item(i);
        if (validToSet.has(opt.value)) {
            opt.classList.remove("text-muted");
        } else {
            opt.classList.add("text-muted");
        }
    }
}
loadForm(document.getElementById("filterForm"));
updateSelect();
</script>
</body>
</html>
